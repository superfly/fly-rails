# commands used to deploy a Rails application
namespace :fly do
  # BUILD step:
  #  - changes to the filesystem made here DO get deployed
  #  - NO access to secrets, volumes, databases
  #  - Failures here prevent deployment

<% if @api -%>
  task :build
<% else -%>
  task :build => 'assets:precompile'
<% end -%>


<% unless @litefs -%>
  # RELEASE step:
  #  - changes to the filesystem made here are DISCARDED
  #  - full access to secrets, databases
  #  - failures here prevent deployment
  <%- if @sqlite3 -%>
  task :release
  <%- else -%>
  task :release => <%= @dbprep.inspect %>
  <%- end -%>

<% end -%>
<% if @avahi or @nats -%>
  task :env do
<% if @redis -%>
    if ENV['NATS_SERVER']
      redis_host = "#{ENV['FLY_REGION']}-redis.local"
    else
      redis_host = 'localhost'
    end

    ENV['REDIS_URL'] = "redis://#{redis_host}:6379/1"
<% end -%>
<% if @anycable -%>
    ENV['ANYCABLE_GO_RPC_HOST'] = "#{ENV['FLY_REGION']}-anycable-rpc.local:50051"
<% end -%>
  end

<% end -%>
  # SERVER step:
  #  - changes to the filesystem made here are deployed
  #  - full access to secrets, databases
  #  - failures here result in VM being stated, shutdown, and rolled back
  #    to last successful deploy (if any).
  <%= begin
    deps = [:swapfile]
    deps << @dbprep if @sqlite3
    deps = deps.first if deps.length == 1

    if @procs.length > 1 and (@avahi or @nats)
      "task :server, [:formation] => #{deps.inspect} do |task, args|"
    else
      "task :server => #{deps.inspect} do"
    end
  end %>
  rm_f 'tmp/pids/server.pid' if File.exist? 'tmp/pids/server.pid'
  <%- if @procs.length > 1 -%>
    <%- if @avahi or @nats -%>
    <%- if @passenger -%>
    sh 'envsubst < config/nginx.conf > /etc/nginx/sites-available/rails.conf'
    <%- end -%>
    formation = args[:formation].gsub!(';', ',')
    <%- if @avahi -%>
    Rake::Task['fly:avahi_publish'].invoke(formation)
    <%- end -%>
    <%- if @nats -%>
    Rake::Task['fly:nats_publish'].invoke(formation) if ENV['NATS_SERVER']
    <%- end -%>
    Bundler.with_original_env do
      Rake::Task['fly:env'].invoke
      sh "foreman start --procfile=Procfile.fly --formation=#{formation}"
    end
    <%- else -%>
    Bundler.with_original_env do
      sh "foreman start --procfile=Procfile.fly"
    end
    <%- end -%>
  <%- else -%>
    sh <%= @procs.values.first.inspect %>
  <%- end -%>
  end

  # optional SWAPFILE task:
  #  - adjust fallocate size as needed
  #  - performance critical applications should scale memory to the
  #    point where swap is rarely used.  'fly scale help' for details.
  #  - disable by removing dependency on the :server task, thus:
  <%- if @sqlite3 -%>
  #        task :server => '<%= @dbprep.inspect %>' do
  <%- else -%>
  #        task :server do
  <%- end -%>
  task :swapfile do
    sh 'fallocate -l 512M /swapfile'
    sh 'chmod 0600 /swapfile'
    sh 'mkswap /swapfile'
    sh 'echo 10 > /proc/sys/vm/swappiness'
    sh 'swapon /swapfile'
<% if @redis == :internal -%>
    sh 'echo 1 > /proc/sys/vm/overcommit_memory'
<% end -%>
  end
end
